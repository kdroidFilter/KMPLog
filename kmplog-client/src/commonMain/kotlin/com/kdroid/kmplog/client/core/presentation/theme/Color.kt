package com.kdroid.kmplog.client.core.presentation.theme
import androidx.compose.ui.graphics.Color

val primaryLightHighContrast = Color(0xFF6F6F6F)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF8F8F8F)
val onPrimaryContainerLightHighContrast = Color(0xFF000000)
val secondaryLightHighContrast = Color(0xFF7A7A7A)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF9A9A9A)
val onSecondaryContainerLightHighContrast = Color(0xFF000000)
val tertiaryLightHighContrast = Color(0xFF7F7F7F)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF9E9E9E)
val onTertiaryContainerLightHighContrast = Color(0xFF000000)
val errorLightHighContrast = Color(0xFFB00020)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFFD32F2F)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color.LightGray
val onBackgroundLightHighContrast = Color(0xFF5A5A5A)
val surfaceLightHighContrast = Color(0xFFD3D3D3)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFB0B0B0)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF8A8A8A)
val outlineVariantLightHighContrast = Color(0xFF8A8A8A)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF3E3E3E)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFC4C4C4)
val surfaceDimLightHighContrast = Color(0xFFA9A9A9)
val surfaceBrightLightHighContrast = Color(0xFFE0E0E0)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF0F0F0)
val surfaceContainerLightHighContrast = Color(0xFFDCDCDC)
val surfaceContainerHighLightHighContrast = Color(0xFFC8C8C8)
val surfaceContainerHighestLightHighContrast = Color(0xFFB4B4B4)

val primaryDarkHighContrast = Color(0xFFB4B4B4)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFA0A0A0)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFB4B4B4)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFF8F8F8F)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFB5B5B5)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFF9A9A9A)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFD32F2F)
val onErrorDarkHighContrast = Color(0xFFFFFFFF)
val errorContainerDarkHighContrast = Color(0xFFB71C1C)
val onErrorContainerDarkHighContrast = Color(0xFFFFFFFF)
val backgroundDarkHighContrast = Color.DarkGray
val onBackgroundDarkHighContrast = Color(0xFFFFFFFF)
val surfaceDarkHighContrast = Color(0xFF2D2D2D)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF474747)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
val outlineDarkHighContrast = Color(0xFFBDBDBD)
val outlineVariantDarkHighContrast = Color(0xFFBDBDBD)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFB4B4B4)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF8A8A8A)
val surfaceDimDarkHighContrast = Color(0xFF3A3A3A)
val surfaceBrightDarkHighContrast = Color(0xFF4F4F4F)
val surfaceContainerLowestDarkHighContrast = Color(0xFF1F1F1F)
val surfaceContainerLowDarkHighContrast = Color(0xFF292929)
val surfaceContainerDarkHighContrast = Color(0xFF333333)
val surfaceContainerHighDarkHighContrast = Color(0xFF3D3D3D)
val surfaceContainerHighestDarkHighContrast = Color(0xFF474747)




